{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onClick","prevOpen","onBeforeChange","editor","data","options","lineWrapping","lint","theme","mode","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setsrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NASe,SAASA,EAAOC,GAAQ,IAC5BC,EAAwCD,EAAxCC,SAAUC,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,SADH,EAEbC,oBAAS,GAFI,mBAE3BC,EAF2B,KAEtBC,EAFsB,KAMlC,OACI,oCACI,yBAAKC,UAAS,2BAAsBF,EAAM,GAAI,cAC1C,yBAAKE,UAAU,gBACVN,EACD,4BAAQO,QAAS,kBAAIF,GAAQ,SAAAG,GAAQ,OAAGA,OAAxC,QAEJ,kBAAC,aAAD,CACIC,eAXhB,SAAsBC,EAAQC,EAAMV,GAChCC,EAASD,IAWGA,MAAOA,EACPK,UAAU,sBACVM,QAAS,CACLC,cAAa,EACbC,MAAK,EACLC,MAAM,WACNC,KAAKjB,EACLkB,aAAY,OC3BrB,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHG,cAGgBF,EAD6B,EAE/BhB,oBAAS,WAChC,IAAMmB,EAAUC,aAAaC,QAAQH,GACrC,OAAc,MAAXC,EAAuBG,KAAKC,MAAMJ,GACV,oBAAjBF,EACCA,IAGAA,KAT2C,mBAE/CnB,EAF+C,KAEzC0B,EAFyC,KAgBtD,OAHAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU7B,MAClD,CAACoB,EAAapB,IACV,CAACA,EAAO0B,GC0BJI,MA3Cf,WAAgB,IAAD,EAEQb,EAAgB,OAAO,IAF/B,mBAENc,EAFM,KAEDC,EAFC,OAGMf,EAAgB,MAAM,IAH5B,mBAGNgB,EAHM,KAGFC,EAHE,OAIIjB,EAAgB,KAAK,IAJzB,mBAINkB,EAJM,KAIHC,EAJG,OAKYlC,mBAAS,IALrB,mBAKNmC,EALM,KAKCC,EALD,KAqBb,OAdAX,qBAAU,WACR,IAAMY,EAAQC,YAAW,WACvBF,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,sCAOT,KAEF,OAAO,kBAAIM,aAAaF,MACvB,CAACR,EAAKE,EAAIE,IAGX,oCACE,yBAAK9B,UAAU,iBACb,kBAACT,EAAD,CAAQE,SAAS,MAAMC,YAAY,OAAOC,MAAO+B,EAAM9B,SAAU+B,IACjE,kBAACpC,EAAD,CAAQE,SAAS,MAAMC,YAAY,MAAMC,MAAOiC,EAAKhC,SAAUiC,IAC/D,kBAACtC,EAAD,CAAQE,SAAS,aAAaC,YAAY,KAAKC,MAAOmC,EAAIlC,SAAUmC,KAGtE,yBAAK/B,UAAU,QACb,4BACEgC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YClCjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7ad307d5.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\r\n\r\n\r\nexport default function Editor(props) {\r\n    const {language, displayName, value, onChange}=props;\r\n    const [open,setOpen]=useState(true);\r\n    function handleChange(editor, data, value) {\r\n        onChange(value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`editor-container ${open? '': 'collapsed'}`}>\r\n                <div className=\"editor-title\">\r\n                    {displayName}\r\n                    <button onClick={()=>setOpen(prevOpen=>!prevOpen)}>O/C</button>\r\n                </div>\r\n                <ControlledEditor \r\n                    onBeforeChange={handleChange}\r\n                    value={value}\r\n                    className=\"code-mirror-wrapper\"\r\n                    options={{\r\n                        lineWrapping:true,\r\n                        lint:true,\r\n                        theme:'material',\r\n                        mode:language,\r\n                        lineNumbers:true\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\n\r\nconst PREFIX='codepencil-'\r\n\r\nexport default function useLocalStorage(key, initialValue){\r\n    const prefixedKey=PREFIX+key;\r\n    const [value,setValue]=useState(()=>{\r\n    const jsonValue=localStorage.getItem(prefixedKey)\r\n    if(jsonValue!=null)return JSON.parse(jsonValue)\r\n    if(typeof initialValue === 'function'){\r\n        return initialValue()\r\n    }\r\n    else {\r\n        return initialValue\r\n    }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n    return [value, setValue]\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\nimport Editor from './components/Editor';\nimport useLocalStorage from './hooks/useLocalStorage';\nfunction App() {\n\n  const [html,setHtml]=useLocalStorage('html','');\n  const [css,setCss]=useLocalStorage('css','');\n  const [js,setJs]=useLocalStorage('js','');\n  const [srcDoc,setsrcDoc]=useState('');\n\n  useEffect(() => {\n    const timeout=setTimeout(()=>{\n      setsrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n    `)\n    },250)\n\n    return ()=>clearTimeout(timeout)\n  }, [html,css,js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor language=\"xml\" displayName=\"HTML\" value={html} onChange={setHtml}/>\n        <Editor language=\"css\" displayName=\"CSS\" value={css} onChange={setCss} />\n        <Editor language=\"javascript\" displayName=\"JS\" value={js} onChange={setJs} />\n\n      </div>\n      <div className=\"pane\">\n        <iframe \n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n          />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}